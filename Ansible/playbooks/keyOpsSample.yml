#
# (c) 2023 Thales Group. All rights reserved.
# Author: Anurag Jain, Developer Advocate, Thales
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
  - name: "Sample playbook for Key Operations on CipherTrust Manager"
    hosts: localhost
    connection: local

    vars_files:
      - vars/keyMgmt.yml

    tasks:
    - name: "Get Key ID from its name"
      thales.ciphertrust.cm_resource_get_id_from_name:
        query_param: "name"
        query_param_value: "{{ key_name }}"
        resource_type: "keys"
      register: key

    - name: "Archive Key"
      thales.ciphertrust.vault_keys2_op:
        op_type: archive
        cm_key_id: "{{ key['id'] }}"
        localNode: "{{ this_node_connection_string }}"
      register: output

    - name: Pause until you can verify updates to an application were successful
      ansible.builtin.pause:

    - name: "Recover Key"
      thales.ciphertrust.vault_keys2_op:
        op_type: recover
        cm_key_id: "{{ key['id'] }}"
        localNode: "{{ this_node_connection_string }}"
      register: output

    - name: Pause until you can verify updates to an application were successful
      ansible.builtin.pause:

    - name: "Revoke Key"
      thales.ciphertrust.vault_keys2_op:
        op_type: revoke
        cm_key_id: "{{ key['id'] }}"
        reason: "{{ key_revocation_reason }}"
        message: "{{ key_revocation_message }}"
        localNode: "{{ this_node_connection_string }}"
      register: output

    - name: Pause until you can verify updates to an application were successful
      ansible.builtin.pause:

    - name: "Reactivate Key"
      thales.ciphertrust.vault_keys2_op:
        op_type: revoke
        cm_key_id: "{{ key['id'] }}"
        reason: "{{ key_reactivation_reason }}"
        message: "{{ key_reactivation_message }}"
        localNode: "{{ this_node_connection_string }}"
      register: output

    - name: Pause until you can verify updates to an application were successful
      ansible.builtin.pause:

    - name: "Destroy Key"
      thales.ciphertrust.vault_keys2_op:
        op_type: destroy
        cm_key_id: "{{ key['id'] }}"
        localNode: "{{ this_node_connection_string }}"
      register: output

    - name: Pause until you can verify updates to an application were successful
      ansible.builtin.pause:

    - name: "Delete Key"
      thales.ciphertrust.cm_resource_delete:
        localNode: "{{ this_node_connection_string }}"
        key: "{{ key['id'] }}"
        resource_type: "keys"

    - name: Debug Output
      debug: var=output