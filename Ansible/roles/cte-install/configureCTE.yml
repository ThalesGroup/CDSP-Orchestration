---
  - name: Configure CTE
    hosts: cte-clients
    become: yes

    vars_files:
      - vars/cte.yml

    tasks:
      - name: "Get CTE Client ID from Name"
        thalesgroup.ciphertrust.cm_resource_get_id_from_name:
          localNode: "{{ this_node_connection_string }}"
          query_param: "name"
          query_param_value: "{{ ansible_ssh_host }}" 
          resource_type: "cte-client"
        register: client
        ignore_errors: true

      - name: "Get User ID from Name"
        thalesgroup.ciphertrust.cm_resource_get_id_from_name:
          localNode: "{{ this_node_connection_string }}"
          query_param: username
          query_param_value: admin
          resource_type: users
        register: user
        ignore_errors: true

      - name: "Create Key"
        thalesgroup.ciphertrust.vault_keys2_save:
          op_type: create
          name: "AnsibleCTEKey"
          algorithm: aes
          size: 256
          undeletable: false
          unexportable: false
          usageMask: 76
          meta:
            ownerId: "{{ user['response']['id'] }}"
            permissions:
              DecryptWithKey:
                - "CTE Clients"
              EncryptWithKey:
                - "CTE Clients"
              ExportKey:
                - "CTE Clients"
              MACVerifyWithKey:
                - "CTE Clients"
              MACWithKey:
                - "CTE Clients"
              ReadKey:
                - "CTE Clients"
              SignVerifyWithKey:
                - "CTE Clients"
              SignWithKey:
                - "CTE Clients"
              UseKey:
                - "CTE Clients"
            cte:
              persistent_on_client: true
              encryption_mode: CBC
              cte_versioned: false
          xts: false
          localNode: "{{ this_node_connection_string }}"
        register: key

      - name: "Create CTE Policy Element - Resource Set"
        thalesgroup.ciphertrust.cte_resource_set:
          localNode: "{{ this_node_connection_string }}"
          op_type: create
          name: "Ansible-RS-001"
          description: "Created via Ansible"
          type: Directory
          resources:
            - directory: "/"
              file: "*"
              include_subfolders: true
              hdfs: false
        register: resourceSet

      - name: "Create CTE Policy"
        thalesgroup.ciphertrust.cte_policy_save:
          localNode: "{{ this_node_connection_string }}"
          op_type: create
          name: "Ansible-Policy-001"
          description: "Created via Ansible"
          never_deny: false
          metadata:
            restrict_update: false
          security_rules:
            - action: key_op
              effect: "permit,applykey"
              partial_match: true
            - resource_set_id: "{{ resourceSet['response']['id'] }}"
              exclude_resource_set: false
              partial_match: true
              action: all_ops
              effect: "permit,audit,applykey"
          policy_type: Standard
          key_rules:
            - key_id: "{{ key['response']['id'] }}"
              resource_set_id: "{{ resourceSet['response']['id'] }}"
          data_transform_rules:
            - key_id: "{{ key['response']['id'] }}"
              resource_set_id: "{{ resourceSet['response']['id'] }}"
          name: Ansible-CTE-Policy-001
          description: "Created using Ansible"
        register: policy

      - name: "Add Guard Paths to the CTE Client"
        thalesgroup.ciphertrust.cte_client:
          localNode: "{{ this_node_connection_string }}"
          op_type: add_guard_point
          id: "{{ client['response']['id'] }}"
          guard_paths:
            - "/tmp/"
          guard_point_params:
            - guard_point_type: directory_auto
              policy_id: "{{ policy['response']['id'] }}"
              automount_enabled: true
        register: output

      - name: Debug Output
        debug: var=output
